# Typie 로컬 개발 환경 설정
# 
# 이 파일을 .env.local로 복사하여 사용하세요:
# cp .env.local.example .env.local
#
# 오프라인 개발: 기본 설정으로 별도의 환경 변수 없이 바로 개발을 시작할 수 있습니다.

# =============================================================================
# 오프라인 개발 (기본값)
# =============================================================================
# 별도의 설정 없이 SQLite와 로컬 스토리지를 사용합니다.
# DATABASE_URL은 기본적으로 ./data/typie.db를 사용합니다.
# Redis는 선택 사항이며, 설정하지 않으면 인메모리 캐시를 사용합니다.

# =============================================================================
# 선택 사항: 프로덕션 환경 시뮬레이션
# =============================================================================
# 프로덕션과 유사한 환경이 필요한 경우 아래 설정을 사용하세요.

# PostgreSQL 데이터베이스 (선택 사항)
# Docker Compose 사용: docker-compose up -d postgres
# DATABASE_URL=postgresql://typie:typie@localhost:5432/typie

# Redis 연결 (선택 사항)
# 설정하지 않으면 인메모리 로컬 스토어를 사용합니다
# Docker Compose 사용: docker-compose up -d redis
# REDIS_URL=redis://localhost:6379

# Meilisearch 검색 엔진 (선택 사항)
# Docker Compose 사용: docker-compose up -d meilisearch
# MEILISEARCH_URL=http://localhost:7700
# MEILISEARCH_API_KEY=masterKey

# =============================================================================
# 서버 설정
# =============================================================================

# 서버 포트 설정
LISTEN_PORT=8080

# 서비스 URL 설정 (로컬 개발용)
AUTH_URL=http://localhost:5173
WEBSITE_URL=http://localhost:5173
USERSITE_URL=http://localhost:5173

# =============================================================================
# OAuth 인증 (로컬 개발용 더미 값)
# =============================================================================
# 로컬 개발 시 OAuth 로그인 없이 테스트할 수 있습니다.
# 실제 OAuth 연동이 필요한 경우에만 실제 값을 설정하세요.

OIDC_CLIENT_ID=dev-client-id
OIDC_CLIENT_SECRET=dev-client-secret
OIDC_JWK={"kty":"RSA","n":"dummy","e":"AQAB"}

# Google OAuth (선택 사항)
GOOGLE_OAUTH_CLIENT_ID=
GOOGLE_OAUTH_CLIENT_SECRET=

# Kakao OAuth (선택 사항)
KAKAO_CLIENT_ID=
KAKAO_CLIENT_SECRET=

# Naver OAuth (선택 사항)
NAVER_CLIENT_ID=
NAVER_CLIENT_SECRET=

# =============================================================================
# Apple 서비스 (로컬 개발용 더미 값)
# =============================================================================
# 실제 Apple 서비스 연동이 필요한 경우에만 설정하세요.

APPLE_TEAM_ID=
APPLE_SIGN_IN_KEY_ID=
APPLE_SIGN_IN_PRIVATE_KEY=
APPLE_APP_APPLE_ID=0
APPLE_APP_BUNDLE_ID=
APPLE_IAP_ISSUER_ID=
APPLE_IAP_KEY_ID=
APPLE_IAP_PRIVATE_KEY=

# =============================================================================
# 결제 서비스 (로컬 개발용 더미 값)
# =============================================================================

# PortOne 결제 (선택 사항)
PORTONE_API_SECRET=
PORTONE_CHANNEL_KEY=

# Google Play IAP (선택 사항)
GOOGLE_PLAY_PACKAGE_NAME=
GOOGLE_SERVICE_ACCOUNT={}

# =============================================================================
# 외부 API 서비스 (로컬 개발용 더미 값)
# =============================================================================
# 로컬 개발 시 대부분의 외부 API 없이 테스트할 수 있습니다.

# Anthropic AI API (선택 사항)
ANTHROPIC_API_KEY=

# GitHub API (선택 사항)
GITHUB_TOKEN=

# Iframely API (선택 사항)
IFRAMELY_API_KEY=

# Slack 알림 (선택 사항)
SLACK_BOT_TOKEN=
SLACK_SIGNING_SECRET=
SLACK_WEBHOOK_URL=

# 맞춤법 검사 API (선택 사항)
SPELLCHECK_API_KEY=
SPELLCHECK_URL=http://localhost:8081

# =============================================================================
# 모니터링 및 로깅 (선택 사항)
# =============================================================================

# Sentry 오류 추적 (선택 사항)
SENTRY_DSN=

# OpenTelemetry (선택 사항)
OTEL_EXPORTER_OTLP_ENDPOINT=

# 환경 설정
PUBLIC_ENVIRONMENT=local
NODE_ENV=development

# =============================================================================
# 빠른 시작 가이드
# =============================================================================
#
# 오프라인 개발 (권장):
#   1. bun install
#   2. bun run dev
#
# 그게 전부입니다! 별도의 환경 변수 설정이나 Docker 없이 바로 시작할 수 있습니다.
#
# 프로덕션 환경 시뮬레이션:
#   1. docker-compose up -d postgres redis meilisearch
#   2. 위의 DATABASE_URL과 REDIS_URL 주석 해제
#   3. bun run dev
#
# =============================================================================
